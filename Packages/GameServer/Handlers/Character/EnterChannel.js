import read from './EnterChannel.read';
import { CenterCommunication } from '../../../Common/Intercommunication/center';
import enterChannelInformation from './EnterChannel.write';

const mockCharacter = {
  inventory: {
    EQUIPPED: {
      slots: 15,
      items: {
        0: { itemId: 100100 },
      },
    },
    EQUIP: {
      slots: 15,
      items: {
        0: { itemId: 100100 },
      },
    },
    USE: {
      slots: 15,
      items: {
        0: { itemId: 100100 },
      },
    },
    SETUP: {
      slots: 15,
      items: {
        0: { itemId: 100100 },
      },
    },
    ETC: {
      slots: 15,
      items: {
        0: { itemId: 100100 },
      },
    },
    CASH: {
      slots: 15,
      items: {
        0: { itemId: 100100 },
      },
    },
  },
  skills: [
    { skillId: 100100, level: 10, masterLevel: 10 },
    { skillId: 100100, level: 10, masterLevel: 10 },
    { skillId: 100100, level: 10, masterLevel: 10 },
  ],
  cooldown: [
    { skillId: 100100, timeStart: 0 },
  ],
  quests: [],
  rings: [],
  teleport: [],
  monsterBook: {
    cover: 0,
    cards: [],
  },
  areaInfo: [], // search more about it
};

export default async ({ reader, client }) => {
  try {
    const { characterId } = read(reader);
    const realCharacter = await CenterCommunication({
      operation: 'CHARACTER/GET',
      data: { characterId },
    });

    const character = {
      ...realCharacter,
      mockCharacter,
    };

    client.sendPacket(enterChannelInformation({ character }));
    // DONE client.sendPacket(Buffer.from([0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x06, 0x52, 0xAC, 0xB6, 0xA8, 0xE7, 0x73, 0x4E, 0xE9, 0x4B, 0x07, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x68, 0x75, 0x63, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x5A, 0x00, 0x00, 0x8F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x64, 0x00, 0xE7, 0x03, 0xE7, 0x03, 0xE7, 0x03, 0xE7, 0x03, 0x00, 0x0D, 0x00, 0x0D, 0x54, 0x0D, 0x54, 0x0D, 0x0E, 0x01, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x03, 0xA0, 0x86, 0x01, 0x00, 0x10, 0x27, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x19, 0x01, 0x0B, 0x00, 0x4D, 0x65, 0x72, 0x64, 0x61, 0x44, 0x65, 0x4A, 0x6F, 0x67, 0x6F, 0x4E, 0x38, 0x25, 0x00, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x40, 0xE0, 0xFD, 0x3B, 0x37, 0x4F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x80, 0x05, 0xBB, 0x46, 0xE6, 0x17, 0x02, 0x00, 0x00, 0x02, 0x00, 0x57, 0x71, 0x00, 0x00, 0xCC, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0xFF, 0xC9, 0x9A, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x40, 0x61, 0x6F, 0xE7, 0x81, 0xD4, 0x01]));
    // client.sendPacket(Buffer.from([0x44, 0x00, 0x06, 0x5C, 0x00, 0x56, 0x6F, 0x63, 0xEA, 0x20, 0x66, 0x65, 0x7A, 0x20, 0x6C, 0x6F, 0x67, 0x69, 0x6E, 0x20, 0x70, 0x6F, 0x72, 0x20, 0x32, 0x20, 0x64, 0x69, 0x61, 0x73, 0x20, 0x73, 0x65, 0x67, 0x75, 0x69, 0x64, 0x6F, 0x73, 0x2E, 0x20, 0x43, 0x6F, 0x6D, 0x70, 0x6C, 0x65, 0x74, 0x65, 0x20, 0x35, 0x20, 0x70, 0x61, 0x72, 0x61, 0x20, 0x63, 0x6F, 0x6D, 0x65, 0xE7, 0x61, 0x72, 0x20, 0x61, 0x20, 0x72, 0x65, 0x63, 0x65, 0x62, 0x65, 0x72, 0x20, 0x70, 0x72, 0xEA, 0x6D, 0x69, 0x6F, 0x73, 0x2E, 0x20, 0x2B, 0x69, 0x6E, 0x66, 0x6F, 0x20, 0x40, 0x70, 0x72, 0x65, 0x6D, 0x69, 0x6F, 0x00, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x90, 0x00, 0x10, 0x01]));
    // client.sendPacket(Buffer.from([0xA1, 0x00, 0x01, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x1F, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x4F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0xDE, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0xDD, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x8A, 0x00, 0x03, 0x14, 0x00, 0x6D, 0x61, 0x70, 0x6C, 0x65, 0x6D, 0x61, 0x70, 0x2F, 0x65, 0x6E, 0x74, 0x65, 0x72, 0x2F, 0x31, 0x30, 0x30, 0x30, 0x30]));
    // client.sendPacket(Buffer.from([0xA0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x05, 0x00, 0x43, 0x68, 0x75, 0x63, 0x6B, 0x0A, 0x00, 0x47, 0x61, 0x6D, 0x65, 0x4D, 0x61, 0x73, 0x74, 0x65, 0x72, 0x06, 0x04, 0x03, 0xA8, 0x0F, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xEA, 0x61, 0x4C, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xBE, 0x5A, 0x00, 0x00, 0x01, 0x8F, 0x84, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA7, 0xFF, 0xC3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x90, 0x00, 0x10, 0x01]));
    // client.sendPacket(Buffer.from([0x01, 0x01, 0x64, 0x00, 0x00, 0x00, 0x35, 0x08, 0x00, 0x00, 0x82, 0x00, 0x31, 0x01, 0x00, 0x33, 0x00, 0x74, 0x00, 0x9A, 0x00, 0x01]));
    // client.sendPacket(Buffer.from([0x03, 0x01, 0x01, 0x64, 0x00, 0x00, 0x00, 0x35, 0x08, 0x00, 0x00, 0x82, 0x00, 0x31, 0x01, 0x00, 0x33, 0x00, 0x74, 0x00, 0x9A, 0x00, 0x01]));
    // client.sendPacket(Buffer.from([0x01, 0x01, 0xAF, 0xE5, 0xC8, 0x6A, 0x34, 0x08, 0x00, 0x00, 0x41, 0x03, 0x7D, 0x00, 0x01, 0x09, 0x00, 0x0F, 0x03, 0x73, 0x03, 0x01]));
    // client.sendPacket(Buffer.from([0x03, 0x01, 0x01, 0xAF, 0xE5, 0xC8, 0x6A, 0x34, 0x08, 0x00, 0x00, 0x41, 0x03, 0x7D, 0x00, 0x01, 0x09, 0x00, 0x0F, 0x03, 0x73, 0x03, 0x01]));
    // client.sendPacket(Buffer.from([0x01, 0x01, 0x41, 0xE4, 0xDD, 0x46, 0x53, 0x7B, 0x89, 0x00, 0x32, 0x02, 0x6D, 0x01, 0x01, 0x1B, 0x00, 0xBA, 0xDB, 0x00, 0x02, 0x01]));
    // client.sendPacket(Buffer.from([0x03, 0x01, 0x01, 0x41, 0xE4, 0xDD, 0x46, 0x53, 0x7B, 0x89, 0x00, 0x32, 0x02, 0x6D, 0x01, 0x01, 0x1B, 0x00, 0xBA, 0xDB, 0x00, 0x02, 0x01]));
    // client.sendPacket(Buffer.from([0x01, 0x01, 0x64, 0x00, 0x00, 0x00, 0x35, 0x08, 0x00, 0x00, 0x82, 0x00, 0x31, 0x01, 0x00, 0x33, 0x00, 0x74, 0x00, 0x9A, 0x00, 0x01]));
    // client.sendPacket(Buffer.from([0x03, 0x01, 0x01, 0x64, 0x00, 0x00, 0x00, 0x35, 0x08, 0x00, 0x00, 0x82, 0x00, 0x31, 0x01, 0x00, 0x33, 0x00, 0x74, 0x00, 0x9A, 0x00, 0x01]));
    // client.sendPacket(Buffer.from([0x01, 0x01, 0xAF, 0xE5, 0xC8, 0x6A, 0x34, 0x08, 0x00, 0x00, 0x41, 0x03, 0x7D, 0x00, 0x01, 0x09, 0x00, 0x0F, 0x03, 0x73, 0x03, 0x01]));
    // client.sendPacket(Buffer.from([0x03, 0x01, 0x01, 0xAF, 0xE5, 0xC8, 0x6A, 0x34, 0x08, 0x00, 0x00, 0x41, 0x03, 0x7D, 0x00, 0x01, 0x09, 0x00, 0x0F, 0x03, 0x73, 0x03, 0x01]));
    // client.sendPacket(Buffer.from([0x01, 0x01, 0x41, 0xE4, 0xDD, 0x46, 0x53, 0x7B, 0x89, 0x00, 0x32, 0x02, 0x6D, 0x01, 0x01, 0x1B, 0x00, 0xBA, 0xDB, 0x00, 0x02, 0x01]));
    // client.sendPacket(Buffer.from([0x03, 0x01, 0x01, 0x41, 0xE4, 0xDD, 0x46, 0x53, 0x7B, 0x89, 0x00, 0x32, 0x02, 0x6D, 0x01, 0x01, 0x1B, 0x00, 0xBA, 0xDB, 0x00, 0x02, 0x01]));
    // client.sendPacket(Buffer.from([0x23, 0x00]));
    // client.sendPacket(Buffer.from([0x94, 0x00, 0x0C, 0x06]));
    // client.sendPacket(Buffer.from([0x3F, 0x00, 0x07, 0x00]));
    // client.sendPacket(Buffer.from([0x64, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x20, 0x52, 0x65, 0x75, 0x6E, 0x69, 0x6F, 0x6E, 0x4B, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x54, 0x65, 0x6C, 0x65, 0x70, 0x6F, 0x72, 0x74, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6C, 0x79, 0x20, 0x74, 0x6F, 0x20, 0x74, 0x68, 0x65, 0x20, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x20, 0x6D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x20, 0x6F, 0x66, 0x20, 0x79, 0x6F, 0x75, 0x72, 0x20, 0x63, 0x68, 0x6F, 0x69, 0x63, 0x65, 0x2E, 0x01, 0xF4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x53, 0x75, 0x6D, 0x6D, 0x6F, 0x6E, 0x20, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x58, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x31, 0x20, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x20, 0x6D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x53, 0x75, 0x6D, 0x6D, 0x6F, 0x6E, 0x20, 0x61, 0x20, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x20, 0x6D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x20, 0x6F, 0x66, 0x20, 0x63, 0x68, 0x6F, 0x69, 0x63, 0x65, 0x20, 0x74, 0x6F, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6D, 0x61, 0x70, 0x20, 0x79, 0x6F, 0x75, 0x27, 0x72, 0x65, 0x20, 0x69, 0x6E, 0x2E, 0x02, 0xBC, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x4D, 0x79, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x31, 0x2E, 0x35, 0x78, 0x20, 0x28, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x92, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x4D, 0x6F, 0x6E, 0x73, 0x74, 0x65, 0x72, 0x20, 0x64, 0x72, 0x6F, 0x70, 0x20, 0x72, 0x61, 0x74, 0x65, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x31, 0x2E, 0x35, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x03, 0x20, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x4D, 0x79, 0x20, 0x45, 0x58, 0x50, 0x20, 0x31, 0x2E, 0x35, 0x78, 0x20, 0x28, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x91, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x61, 0x72, 0x6E, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x68, 0x75, 0x6E, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x31, 0x2E, 0x35, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x04, 0xE8, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x17, 0x00, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x20, 0x42, 0x6F, 0x6E, 0x64, 0x69, 0x6E, 0x67, 0x20, 0x28, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0xD9, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x41, 0x74, 0x20, 0x6C, 0x65, 0x61, 0x73, 0x74, 0x20, 0x36, 0x20, 0x46, 0x61, 0x6D, 0x69, 0x6C, 0x79, 0x20, 0x6D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x73, 0x20, 0x6F, 0x6E, 0x6C, 0x69, 0x6E, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x62, 0x65, 0x6C, 0x6F, 0x77, 0x20, 0x6D, 0x65, 0x20, 0x69, 0x6E, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x65, 0x64, 0x69, 0x67, 0x72, 0x65, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x4D, 0x6F, 0x6E, 0x73, 0x74, 0x65, 0x72, 0x20, 0x64, 0x72, 0x6F, 0x70, 0x20, 0x72, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x61, 0x72, 0x6E, 0x65, 0x64, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x20, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x02, 0xB0, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x4D, 0x79, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x32, 0x78, 0x20, 0x28, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x8F, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x4D, 0x6F, 0x6E, 0x73, 0x74, 0x65, 0x72, 0x20, 0x64, 0x72, 0x6F, 0x70, 0x20, 0x72, 0x61, 0x74, 0x65, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x01, 0xDC, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x4D, 0x79, 0x20, 0x45, 0x58, 0x50, 0x20, 0x32, 0x78, 0x20, 0x28, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x8F, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x31, 0x35, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x61, 0x72, 0x6E, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x68, 0x75, 0x6E, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x02, 0xD0, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x4D, 0x79, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x32, 0x78, 0x20, 0x28, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x8F, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x4D, 0x6F, 0x6E, 0x73, 0x74, 0x65, 0x72, 0x20, 0x64, 0x72, 0x6F, 0x70, 0x20, 0x72, 0x61, 0x74, 0x65, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x01, 0xC4, 0x09, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x4D, 0x79, 0x20, 0x45, 0x58, 0x50, 0x20, 0x32, 0x78, 0x20, 0x28, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x90, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x65, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x61, 0x72, 0x6E, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x68, 0x75, 0x6E, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x20, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x02, 0xA0, 0x0F, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x4D, 0x79, 0x20, 0x50, 0x61, 0x72, 0x74, 0x79, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x32, 0x78, 0x20, 0x28, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x95, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x79, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x4D, 0x6F, 0x6E, 0x73, 0x74, 0x65, 0x72, 0x20, 0x64, 0x72, 0x6F, 0x70, 0x20, 0x72, 0x61, 0x74, 0x65, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x72, 0x6F, 0x70, 0x20, 0x52, 0x61, 0x74, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E, 0x01, 0x88, 0x13, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x4D, 0x79, 0x20, 0x50, 0x61, 0x72, 0x74, 0x79, 0x20, 0x45, 0x58, 0x50, 0x20, 0x32, 0x78, 0x20, 0x28, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x29, 0x95, 0x00, 0x5B, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5D, 0x20, 0x4D, 0x79, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x0A, 0x5B, 0x54, 0x69, 0x6D, 0x65, 0x5D, 0x20, 0x33, 0x30, 0x20, 0x6D, 0x69, 0x6E, 0x2E, 0x0A, 0x5B, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5D, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x61, 0x72, 0x6E, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x68, 0x75, 0x6E, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6E, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x23, 0x63, 0x32, 0x78, 0x23, 0x2E, 0x0A, 0x2A, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x58, 0x50, 0x20, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2C, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2E]));
    // client.sendPacket(Buffer.from([0x41, 0x00, 0x3D, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01]));
    // client.sendPacket(Buffer.from([0x41, 0x00, 0x1A, 0x01, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x47, 0x61, 0x6D, 0x65, 0x4D, 0x61, 0x73, 0x74, 0x65, 0x72, 0x06, 0x00, 0x4D, 0x61, 0x73, 0x74, 0x65, 0x72, 0x0A, 0x00, 0x4A, 0x72, 0x2E, 0x20, 0x4D, 0x61, 0x73, 0x74, 0x65, 0x72, 0x06, 0x00, 0x4D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x06, 0x00, 0x4D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x06, 0x00, 0x4D, 0x65, 0x6D, 0x62, 0x65, 0x72, 0x02, 0x30, 0x75, 0x00, 0x00, 0x7C, 0x77, 0x00, 0x00, 0x43, 0x68, 0x75, 0x63, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x1B, 0xEA, 0x2D, 0x05, 0x00, 0x00, 0x00, 0x4D, 0x65, 0x72, 0x64, 0x61, 0x44, 0x65, 0x4A, 0x6F, 0x67, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x1B, 0xEA, 0x2D, 0x05, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x06, 0x04, 0x03, 0xA8, 0x0F, 0x04, 0x10, 0x00, 0x63, 0x68, 0x75, 0x71, 0x75, 0x69, 0x20, 0x74, 0x65, 0x20, 0x61, 0x6D, 0x75, 0x20, 0x3C, 0x33, 0x52, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x29, 0x00, 0x03, 0x00]));
    // client.sendPacket(Buffer.from([0x3F, 0x00, 0x07, 0x00]));
    // client.sendPacket(Buffer.from([0x3A, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x2F, 0x00, 0x01]));
    // client.sendPacket(Buffer.from([0x24, 0x00, 0x01, 0x01, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x80, 0x05, 0xBB, 0x46, 0xE6, 0x17, 0x02, 0x04]));
    // client.sendPacket(Buffer.from([0x30, 0x01, 0x04, 0xD7, 0x07, 0x00, 0x00, 0x01, 0x00, 0x46, 0x00, 0x57, 0x6F, 0x75, 0x6C, 0x64, 0x20, 0x79, 0x6F, 0x75, 0x20, 0x6C, 0x69, 0x6B, 0x65, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x6B, 0x69, 0x70, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x75, 0x74, 0x6F, 0x72, 0x69, 0x61, 0x6C, 0x73, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x68, 0x65, 0x61, 0x64, 0x20, 0x73, 0x74, 0x72, 0x61, 0x69, 0x67, 0x68, 0x74, 0x20, 0x74, 0x6F, 0x20, 0x4C, 0x69, 0x74, 0x68, 0x20, 0x48, 0x61, 0x72, 0x62, 0x6F, 0x72, 0x3F]));
    // client.sendPacket(Buffer.from([0x1F, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00]));
    // client.sendPacket(Buffer.from([0x04, 0x01, 0xAF, 0xE5, 0xC8, 0x6A, 0xFF, 0xFF, 0x41, 0x03, 0x7D, 0x00, 0x01, 0x00, 0x41, 0x03, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x05, 0x38, 0x04]));
    // client.sendPacket(Buffer.from([0xB9, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0A, 0x04, 0x00, 0xA7, 0xFF, 0xCF, 0x01, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x06, 0x96, 0x00, 0x00, 0xA7, 0xFF, 0xD5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x00, 0x00, 0xA7, 0xFF, 0xD5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x04, 0x58, 0x01]));
    // client.sendPacket(Buffer.from([0x04, 0x01, 0xAF, 0xE5, 0xC8, 0x6A, 0xFF, 0xFF, 0x41, 0x03, 0x7D, 0x00, 0x01, 0x00, 0x41, 0x03, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x05, 0x38, 0x04]));
  } catch (err) {
    console.log(err);
  }
};
